Your task is to solve simple word problems by creating Python programs.

You may also leverage the following helper functions, but must avoid fabricating and calling undefined function names, such as `calculate_date_by_years`.
```python
===api===
```

Examples:

Query: In the US, Thanksgiving is on the fourth Thursday of November. Today is the US Thanksgiving of 2001. What is the date one week from today in MM/DD/YYYY?
Program:
```python
# import relevant packages
from datetime import date, time, datetime
from dateutil.relativedelta import relativedelta
import calendar
# 1. What is the date of the first Thursday of November? (independent, support: [])
date_1st_thu = date(2001,11,1)
while date_1st_thu.weekday() != calendar.THURSDAY:
    date_1st_thu += relativedelta(days=1)
# 2. How many days are there in a week? (independent, support: ["External knowledge: There are 7 days in a week."])
n_days_of_a_week = 7
# 3. What is the date today? (depends on 1 and 2, support: ["Today is the US Thanksgiving of 2001", "Thanksgiving is on the fourth Thursday of November"])
days_from_1st_to_4th_thu = (4-1) * n_days_of_a_week
date_today = date_1st_thu + relativedelta(days=days_from_1st_to_4th_thu)
# 4. What is the date one week from today? (depends on 3, support: [])
date_1week_from_today = date_today + relativedelta(weeks=1)
# 5. Final Answer: What is the date one week from today in MM/DD/YYYY? (depends on 4, support: [])
answer = date_1week_from_today.strftime("%m/%d/%Y")
# print the answer
print(answer)
```

Query: Yesterday was 12/31/1929. Today could not be 12/32/1929 because December has only 31 days. What is the date tomorrow in MM/DD/YYYY?
Program:
```python
# import relevant packages
from datetime import date, time, datetime
from dateutil.relativedelta import relativedelta
# 1. What is the date yesterday? (independent, support: ["Yesterday was 12/31/1929"])
date_yesterday = date(1929,12,31)
# 2. What is the date today? (depends on 1, support: ["Today could not be 12/32/1929 because December has only 31 days"])
date_today = date_yesterday + relativedelta(days=1)
# 3. What is the date tomorrow? (depends on 2, support: [])
date_tomorrow = date_today + relativedelta(days=1)
# 4. Final Answer: What is the date tomorrow in MM/DD/YYYY? (depends on 3, support: [])
answer = date_tomorrow.strftime("%m/%d/%Y")
# print the answer
print(answer)
```

Query: The day before yesterday was 11/23/1933. What is the date one week from today in MM/DD/YYYY?
Program:
```python
# import relevant packages
from datetime import date, time, datetime
from dateutil.relativedelta import relativedelta
# 1. What is the date the day before yesterday? (independent, support: ["The day before yesterday was 11/23/1933"])
date_day_before_yesterday = date(1933,11,23)
# 2. What is the date today? (depends on 1, support: [])
date_today = date_day_before_yesterday + relativedelta(days=2)
# 3. What is the date one week from today? (depends on 2, support: [])
date_1week_from_today = date_today + relativedelta(weeks=1)
# 4. Final Answer: What is the date one week from today in MM/DD/YYYY? (depends on 3, support: [])
answer = date_1week_from_today.strftime("%m/%d/%Y")
# print the answer
print(answer)
```

===example===

## Begin !
Please generate ONLY the code wrapped in ```python...``` to solve the query below.

Query: ===task===
Program: